@model SICOAdmin1._0.Models.Parameter.Parameter

@using SICOAdmin1._0.Models.Parameter
@{
    ViewBag.Title = "Parametro";
    List<Parameter> lstParameters = (List<Parameter>)ViewBag.Parameters;
    List<Parameter> lstLogParameters = (List<Parameter>)ViewBag.LogParameters;

    List<int?> lstActions = (List<int?>)Session["lstActions"];
    if (lstActions == null)
    {
        lstActions = new List<int?>();
    }


}
<head>
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
</head>

@section styles{


}
<style>

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<div class="container margin-container p-4 glass">
    <div class="row fila">
        <!--TEXTO-->
        <div class="col-xl-2 col-md-3 d-flex justify-content-center">
            <h3 class="mt-0">Parámetros</h3>
        </div>
        <!--BOTON-->
        <div class="col-xl-2 col-md-2 mb-3 ">
            @if (lstActions.Contains(20))
            {
                <button id="Crear" data-toggle="modal" data-target="#Modal" type="button" class="btn btn-primary col-12">
                    <i class="fa fa-plus-circle mr-1" aria-hidden="true"></i>
                    Agregar
                </button>
            }

        </div>
        <!--Barra busqueda-->
        @*<div class="col-xl-4 col-md-6 offset-xl-3 offset-md-1">
                <div class="input-group mb-2">
                    <input type="text"
                           class="form-control"
                           placeholder="Buscar..."
                           aria-label="Buscar..."
                           aria-describedby="button-search"
                           id="buscar" />
                    <button class="btn btn-outline-secondary"
                            type="button"
                            disabled="disabled"
                            id="button-search">
                        Buscar
                    </button>
                </div>
            </div>*@

        <!--Table -->
        <div class="col-lg-12 row fila scrol-tablex">
            @Html.Partial("_TableParameters", lstParameters);
        </div>

    </div>
</div>


<!-- Modal Agregar-->
@Html.Partial("_AddParameter");

<!-- Modal Editar-->
@Html.Partial("_EditParameter");
<!-- Modal Bitacora-->
@Html.Partial("_ParameterLog");


<!--Script para mostrar los Mensajes-->
@section scripts{

    <script type="text/javascript">
        console.log('@TempData["Message"]');
        console.log('@TempData["Message"]');
        @if (TempData["Resultado"] != null)
        {
            if (TempData["Resultado"].ToString() == "1")
            {
                 <text>
                    $(document).ready(function () {
                        swal({
                            title: "¡¡Exitoso!!", text: ('@TempData["Message"]'), type: "success", timer: 3000, showConfirmButton: false });
                        })
                </text>
            }
            else
            {
                <text>
                $(document).ready(function () {
                        swal({ title: "¡¡Error!!", text: ('@TempData["Message"]'), type: "error",timer: 3000, showConfirmButton: false});
                        })
                </text>
            }
        }
    </script>
}

<script>


      //================================= OBTECION DE ELEMENTOS DEL DOM =====================================

    //------------------ ELEMENTOS DE EDITAR ------------------------------

    //Mostrar Los Datos a actualizar

    const pParam = document.getElementById("upIdParam");
    const Mensualidad = document.getElementById("upMensualidad");
    const Mora = document.getElementById("upMora");
    const Condicion = document.getElementById("upCondicion");
    const Documento = document.getElementById("upDocumento");
    const Recibo = document.getElementById("upRecibo");
    let estado = document.getElementById("upEstado");

  //------------------ ELEMENTOS DE BITACORA ------------------------------


    const tbId = document.getElementById("tbIdParam");
    const tbUsuarioCreacion = document.getElementById("tbUsuarioCreacion");

    //const tbUsuarioModificacion = document.getElementById("tbUsuarioModificacion")

    const tbFechaCreacion = document.getElementById("tbFechaCreacion");
    //const tbFechaModificacion = document.getElementById("tbFechaModificacion");


     //===================================== FUNCIONES =======================================

    //Bitacora
    function jsShowLog(pId) {
        $("#tbCuerpo").html("");
        fetch("@Url.Content("~/Parameters/showLog")" + "?idParam=" + pId)
                .then(res => res.ok ? res.json() : null)
                .then(res => {
                    console.log(res);
                    for (var i = 0; i < res.length; i++) {
                        var date = new Date(res[i].DateCreacion.toString());
                        var date2 = new Date(res[i].DateModification);
                        console.log(date);
                        var tr = `<tr>

                           <td>`+ res[i].AccionRealizada+`</td>
                           <td>`+ res[i].UserModification +`</td>
                           <td>`+ res[i].DateModification +`</td>

                        </tr>`;
                        $("#tbCuerpo").append(tr)
                    }
                    //<td>`+ res[i].DateCreacion+`</td>
                    //<td>`+ res[i].DateModification+`</td>
                           //<td>`+ res[i].IdParameter+`</td>
                    tbUsuarioCreacion.textContent = res[0].UserCreacion;
                    tbUsuarioCreacion.value = res[0].UserCreacion;


                    tbId.textContent = res[0].IdParameter;
                    tbId.value = res[0].IdParameter;
                    tbFechaCreacion.textContent = res[0].DateCreacion;
                    tbFechaCreacion.value = res[0].DateCreacion;


                    //tbUsuarioModificacion.textContent = res.UsuarioModificacion;
                    //tbUsuarioModificacion.value = res.UsuarioModificacion;


                    //tbFechaModificacion.textContent = res.FechaModificacion;
                    //tbFechaModificacion.value = res.FechaModificacion;

                })

    }

    //Activar o desactivar el estado
    function jsChangeStatus(pId) {
         fetch("@Url.Content("~/Parameters/changeStatus")" + "?idParam=" + pId)

              .then(res => res.ok ? res.json() : null)
                .then(res => {
                  console.log(res);
                    if (res == 1) {
                        swal({
                            title: "Correcto", text: "Se modifico el Estado!!", type: "success", timer: 3000,
                            showConfirmButton: false
                        }
                        );
                        $("#tbParameters").load(" #tbParameters");
                    }
                    else {
                        swal({
                            title: "Ups... Ha ocurrido un error", text: "No se modifico el estado!!", type: "error",
                            timer: 3000,
                            showConfirmButton: false
                        });
                        $("#tbParameters").load(" #tbParameters");
                    }

              })



    }


    function showData(pId) {
        fetch("@Url.Content("~/Parameters/showData")" + "?idParam=" + pId)
            .then(res => res.ok ? res.json() : null)
            .then(res => {
                console.log(res);

                pParam.textContent = res.IdParametro;
                pParam.value = res.IdParametro;

                console.log(pParam);
                Mensualidad.textContent = res.Mensualidad;
                Mensualidad.value = res.Mensualidad;

                Mora.textContent = res.InteresMora;
                Mora.value = res.InteresMora;

                Recibo.textContent = res.IdConsecRecibo;
                Recibo.value = res.IdConsecRecibo;



                Documento.textContent = res.TipoDocumentoCobro;
                Documento.value = res.TipoDocumentoCobro;

                Condicion.textContent = res.CondicionPago;
                Condicion.value = res.CondicionPago;



                estado.value = res.Estado;

            })


    }

    $("#number").on({
        "focus": function (event) {
            $(event.target).select();
        },
        "keyup": function (event) {
            $(event.target).val(function (index, value) {
                return value.replace(/\D/g, "")
                    .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                    .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
            });
        }
    });

    ////Funcion Busqueda
    //$(document).ready(function () {
    //    $("#buscar").on("keyup", function () {
    //        var value = $(this).val().toLowerCase();
    //        $("#tbConsecutivo tbody tr").filter(function () {
    //            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
    //        });
    //    });
    //});

</script>