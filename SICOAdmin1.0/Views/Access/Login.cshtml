@{
    Layout = null;
}
<head>
    <title>Inicio de sesión - SICOAdmin</title>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!--Bootstrap-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

    <!--CSS-->
    <link href="~/Content/css/access.css" rel="stylesheet" />

    <!--LOGO EN LA PESTAÑA-->
    <link rel="website icon" type="png" href="~/Content/images/Logo.png" style="border-radius:100px;" />
</head>

<body>
    <div class="wrapper">
        <div class="logo">
            <img src="~/Content/images/Logo.png">
        </div>
        <div class="p-3 text-center mt-3 name">
            <label style="text-align:center;">SICOAdmin</label>
        </div>
        <form class="p-3 mt-3" id="frm">
            <div class="form-field d-flex align-items-center">
                <span class="far fa-user"></span>
                <input type="text" name="userName" id="userName" placeholder="Nombre de usuario" required>
            </div>
            <div class="form-field d-flex align-items-center">
                <span class="fas fa-key"></span>
                <input type="password" name="password" id="pwd" placeholder="Contraseña" required>
            </div>
            <button id="btnSubmit" class="btn mt-3" type="submit">Iniciar sesión</button>
        </form>
        <div class="text-center mt-6">
            <span><a href="" data-toggle="modal" data-target="#changePassModal">Cambiar contraseña</a></span>
        </div>
    </div>

</body>
<!-- Modal cambio de contraseña -->
<div class="modal fade" id="changePassModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Cambiar contrasena</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <form id="frmChangePass">

                    <div class="form-group">
                        <label>Nombre de usuario</label>
                        <input id="CPuserName" required name="password" type="text" @*pattern="^(?=\w*\d)(?=\w*[A-Z])(?=\w*[a-z])\S{8,16}$*@ class="form-control" placeholder="(Ejm: UsuarioEjemplo)" title="Debe ingresar al menos una mayúscula, una minúscula, un digito y tener entre 8 y 16 caracteres." />
                    </div>
                    <div class="form-group">
                        <label>Contrasena actual</label>
                        <input id="CPpassAct" required name="password" type="password" @*pattern="^(?=\w*\d)(?=\w*[A-Z])(?=\w*[a-z])\S{8,16}$*@ class="form-control" placeholder="(Ejm: Example12)" title="Debe ingresar al menos una mayúscula, una minúscula, un digito y tener entre 8 y 16 caracteres." />
                    </div>
                    <div class="form-group">
                        <label>Contrasena nueva</label>
                        <input id="CPpassNew" required name="password" type="password" pattern="^(?=\w*\d)(?=\w*[A-Z])(?=\w*[a-z])\S{8,16}$" class="form-control" placeholder="(Ejm: Example12)" title="Debe ingresar al menos una mayúscula, una minúscula, un digito y tener entre 8 y 16 caracteres." />
                    </div>
                    <div class="form-group">
                        <label class="mt-4 h6">Confirmar contrasena</label>
                        <input id="CPpassConfirm" required name="password" type="password" pattern="^(?=\w*\d)(?=\w*[A-Z])(?=\w*[a-z])\S{8,16}$" class="form-control" placeholder="(Ejm: Example12)" title="Debe ingresar al menos una mayúscula, una minúscula, un digito y tener entre 8 y 16 caracteres." />

                        <span id="messagePass" class="mt-4 h7"></span> <!-- Aquí se mostrará el mensaje -->
                        <br />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                        <button id="btnSubmitCP" disabled type="button" class="btn btn-success">Guardar</button>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>



@section scripts{
}

<script>
    //Variables de confirmar contraseña
    // Obtener los inputs y el span -- Cambio de contraseña
    var CPuserName = document.getElementById("CPuserName");
    var CPpassAct = document.getElementById("CPpassAct");
    var CPpassNew = document.getElementById("CPpassNew");
    var CPpassConfirm = document.getElementById("CPpassConfirm");

    var message = document.getElementById("messagePass");
    var btnS = document.getElementById("btnSubmitCP");

    // Agregar un evento al cambiar el valor de los inputs -- Cambio de contraseña
    CPpassNew.addEventListener("input", compare);
    CPpassConfirm.addEventListener("input", compare);
    //btnS.addEventListener("click", submitForm);
    CPuserName.addEventListener("input", enabledBtnSubmit);
    CPpassAct.addEventListener("input", enabledBtnSubmit);
    CPpassNew.addEventListener("input", enabledBtnSubmit);
    CPpassConfirm.addEventListener("input", enabledBtnSubmit);

    const fetchMethod = (props) => {

        let { url, method = "POST", body, cbSuccess } = props;

        fetch(url, {
            method: method,
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(body)

        }).then(res => (res.ok ? res.json() : Promise.reject(res)))
            .then(data => cbSuccess(data))
            .catch(error => console.error(error));
    }

    const cargarComponent = (props) => {

        let { container, url, body } = props;

        fetch(url, {
            method: "POST",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(body)

        })
            .then((res) => res.text())
            .then((viewPartial) => document.getElementById(container).innerHTML = viewPartial)
            .catch((er) => console.error("Ha ocurrido un error al cargar el contenido", er));
        }

    function submitForm(form) {
        console.log(form);
        Swal.fire({
            title: 'Seguro de cambiar su contraseña?',
            text: "No podrás revertir este cambio!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, cambiar la contraseña!'
        }).then((result) => {
            if (result.isConfirmed) {
                changePass();
            }
        })
        return false;
    }
    cargarEventListener();
    function cargarEventListener() {
        btnSubmit.addEventListener('click', charging);
        btnSubmit.addEventListener('click', loged);
        btnSubmitCP.addEventListener('click', changePass);
    }
    function charging(e) {
        e.preventDefault();
        Swal.fire({
            icon: null,
            title: 'Espere...',
            text: 'Cargando...',
            allowEscapeKey: false,
            allowOutsideClick: false,
            showConfirmButton: false,
            didOpen: () => {
                Swal.showLoading()
            }
        })
    }
    function loged(e) {
        e.preventDefault();

            fetchMethod({
                url: "@Url.Content("~/Access/LoginJs")",
                body: {
                    User: document.querySelector('#userName').value,
                    Pass: document.querySelector('#pwd').value,
                },
                cbSuccess: (res) => {
                    if (res.result) {
                        console.log("Ingreso correcto");
                        cargarComponent({
                                container: "renderLocal",
                                url: "@Url.Content("~/")",
                        })
                        Swal.fire({
                            icon: 'info',
                            title: 'Ingreso correcto',
                            text: (res.message).slice(19),
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading()
                            }
                        })
                        setTimeout( function() { document.location.href = "@Url.Content("~/")" }, 2500);
                    }
                    else {
                        console.log("Error al ingresar");
                        Swal.fire({
                            icon: 'error',
                            title: 'Ha ocurrido un error',
                            text: res.message,
                            confirmButtonText: 'Aceptar'
                        })
                    }
                }
            })
        return false;
    }
    function changePass(e) { //No funciona por completo
        e.preventDefault();

            fetchMethod({
                url: "@Url.Content("~/User/CambiarContrasena")",
                body: {
                    UserName: document.querySelector('#CPuserName').value,
                    PassAct: document.querySelector('#CPpassAct').value,
                    PassNew: document.querySelector('#CPpassNew').value,
                },
                cbSuccess: (res) => {
                    if (res) {
                        console.log("Sí");
                        c@*argarComponent({
                                container: "renderLocal",
                                url: "@Url.Content("~/Access/Login")",
                        })
                        Swal.fire({
                            icon: 'info',
                            title: 'Ingreso correcto',
                            text: res.Message,
                            allowEscapeKey: false,
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading()
                            }
                        })*@
                    }
                    else {
                        console.log("No");
                        //console.log("Error al ingresar");
                        //Swal.fire({
                        //    icon: 'error',
                        //    title: 'Ha ocurrido un error',
                        //    text: res.Message,
                        //    confirmButtonText: 'Aceptar'
                        //})
                    }
                }
            })
    }

    //Función para activar boton de cambiar contraseña
    function enabledBtnSubmit() {
        if ((CPuserName.value && CPpassAct.value && CPpassNew.value && CPpassConfirm.value) != "") {
            btnS.disabled = false;
            btnS.title = ""
        } else {
            btnS.disabled = true;
        }
    }
    // Definir la función que compara los valores de la contraseña nueva
    function compare() {
        if (($('#CPpassNew').val().length > 0) || ($('#CPpassConfirm').val().length > 0)) {
            if (CPpassAct.value != CPpassNew.value) {
                // Si los valores son iguales, mostrar un mensaje verde
                if (CPpassNew.value == CPpassConfirm.value) {
                    message.innerHTML = "Las contrasenas coinciden";
                    message.style.color = "green";
                    CPpassNew.style.borderColor = "green";
                    CPpassConfirm.style.borderColor = "green";
                }
                // Si los valores son diferentes, mostrar un mensaje rojo
                else {
                    message.innerHTML = "Las contrasenas no coinciden";
                    message.style.color = "red";
                    CPpassNew.style.borderColor = "red";
                    CPpassConfirm.style.borderColor = "red";
                }
            } else {
                message.innerHTML = "La contrasena actual y la nueva no pueden ser iguales";
                message.style.color = "red";
                CPpassNew.style.borderColor = "red";
                CPpassConfirm.style.borderColor = "red";
            }
        }
    }
</script>
